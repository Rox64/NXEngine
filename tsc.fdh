//hash:a5b57e94
//automatically generated by Makegen

/* located in game.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
bool game_save(Profile *p);


/* located in ObjManager.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
Object *CreateObject(int x, int y, int type);


/* located in map.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void map_scroll_lock(bool lockstate);
void map_show_map_name();
Object *FindObjectByID2(int id2);
void map_focus(Object *o, int spd);


/* located in platform.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
//FILE *fileopen(const char *fname, const char *mode);


/* located in player.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void PSelectSprite(void);
void PSelectFrame(void);


/* located in playerstats.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void GetWeapon(int wpn, int ammo);
void LoseWeapon(int wpn);
void TradeWeapon(int oldwpn, int newwpn, int ammo);
void AddInventory(int item);
void DelInventory(int item);
int FindInventory(int item);
void AddHealth(int hp);
void RefillAllAmmo(void);


/* located in tsc.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void Clear();
static void GenLTC(void);
static int MnemonicToIndex(const char *str);
static int MnemonicToOpcode(char *str);
bool tsc_init(void);
void tsc_close(void);
bool tsc_load(const char *fname, int pageno);
char *tsc_decrypt(const char *fname, int *fsize_out);
bool tsc_compile(const char *buf, int bufsize, int pageno);
static char nextchar(const char **buf, const char *buf_end);
static int ReadNumber(const char **buf, const char *buf_end);
static void ReadText(DBuffer *script, const char **buf, const char *buf_end);
void RunScripts(void);
void StopScripts(void);
int GetCurrentScript(void);
ScriptInstance *GetCurrentScriptInstance();
const uint8_t *FindScriptData(int scriptno, int pageno, int *page_out);
ScriptInstance *StartScript(int scriptno, int pageno);
void StopScript(ScriptInstance *s);
bool JumpScript(int newscriptno, int pageno);
void ExecScript(ScriptInstance *s);
int CVTDir(int csdir);
const char *DescribeCSDir(int csdir);
void SetCSDir(Object *o, int csdir);
void SetPDir(int d);
void NPCDo(int id2, int p1, int p2, void (*action_function)(Object *o, int p1, int p2));
void DoANP(Object *o, int p1, int p2);
void DoCNP(Object *o, int p1, int p2);
void DoDNP(Object *o, int p1, int p2);
void crtoslashn(const char *in, char *out);
bool contains_non_cr(const char *str);


/* located in inventory.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void UnlockInventoryInput(void);


/* located in debug.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
const char *DescribeObjectType(int type);


/* located in niku.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
bool niku_save(uint32_t value);


/* located in ai/sym/smoke.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void SmokeXY(int x, int y, int nclouds, int rangex, int rangey, Object *push_behind);


/* located in endgame/credits.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void credit_set_image(int imgno);
void credit_clear_image();


/* located in sound/sound.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void sound(int snd);
void music(int songno);
int music_lastsong();
void StartStreamSound(int freq);
void StartPropSound(void);
void StopLoopSounds(void);


/* located in sound/org.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void org_fade(void);


/* located in common/stat.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
void staterr(const char *fmt, ...);
void stat(const char *fmt, ...);


/* located in common/misc.cpp */

//----------------------[referenced from tsc.cpp]--------------------//
char *stprintf(const char *fmt, ...);

